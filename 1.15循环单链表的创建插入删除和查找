#include<stdio.h>
#include<stdlib.h>

typedef struct CLinkList {
	int data;
	struct CLinkList *next;
} node;
//初始化代码
void InitList(node **pNode) {
	int item;
	node* temp;
	node* target;
	printf("请输入节点的值：");
	while(1) {
		scanf("%d",&item);
		fflush(stdin);
		if(item == '0');
		return;
		if(*pNode == NULL) {
			*pNode = (node*)malloc(sizeof(struct CLinkList));
			if(!(*pNode)) {
				exit(0);
			}
			(*pNode)->data = item;
			(*pNode)->next = *pNode;
		} else {
			for(target = (*pNode); target->next!=(*pNode); target =target->next)
				;
			temp = (node *)malloc(sizeof(struct CLinkList));
			if(!temp) {
				exit(0);
			}
			temp->data = item;
			temp->next = *pNode;
			target->next = temp;
		}
	}
}
//插入代码
void InsertList(node **pNode,int i) {
	node *temp;
	node *target;
	node *p;
	int item;
	int j = 1;
	printf("请输入你要插入的值：");
	scanf("%d",&item);
	if(i == 1) {
		temp = (node*)malloc(sizeof(struct CLinkList));
		if(!temp) {
			exit(0);
		}
		temp->data = item;
		for(target = (*pNode); target->next !=(*pNode); target = target->next ) {
			;
		}
		temp->next = (*pNode);
		target->next = temp;
		*pNode = temp;
	} else {
		target = *pNode;
		for(; j<(i-1); ++j) {
			target = target->next;
		}
		temp = (node*)malloc(sizeof(struct CLinkList));
		if(!temp) {
			exit(0);
		}
		temp->data = item;
		p = target->next;
		target->next = temp;
		temp->next = p;

	}
}
//删除代码
void DeleteList(node **pNode,int i) {
	node *target;
	node *temp;
	int j = 1;
	if(i == 1) {
		for(target = *pNode; target->next!=*pNode; target = target->next)
			;
		temp =*pNode;
		*pNode = (*pNode)->next;
		target->next = *pNode;
		free(temp);
	} else {
		target = *pNode;
		for(; j<i-1; ++j) {
			target = target->next;
		}
		temp = target->next;
		target->next = temp->next;
		free(temp);
	}
}
//返回节点所在位置
int SearchList(node *pNode,int n) {
	node *target;
	int i = 1;
	for(target = pNode; target->data!=n&&target->next!=pNode; ++i) {
		target = target->next;
	}
	if(target->next == pNode) {
		return 0;
	} else {
		return i;
	}
}
//遍历 
void PrintList(node *pNode) {
	node *temp;
	temp = pNode;
	do {
		printf("%4d ",temp->data);
	} while((temp = temp->next)!=pNode);
	printf("\n");
}
int main() {
	node *pHead = NULL;
	char opp;
	int find;
	while(opp!=EOF) {
		scanf("%c",&opp);
		switch(opp) {
			case'1':
				InitList(&pHead);
				printf("\n");
				PrintList(pHead);
				break;
			case '2':
				printf("输入插入节点的位置：");
				scanf("%d",&find);
				InsertList(&pHead,find);
				PrintList(pHead);
				printf("\n");
				break;
			case '3':
				printf("删除");
				scanf("%d",&find);
				DeleteList(&pHead,find);
				PrintList(pHead);
				printf("\n");
				break;
			case'4':
				printf("查找");
				scanf("%d",&find);
				printf("%d\n",SearchList(pHead,find));
				break;
				case'0':
					exit(0);
		}
	}
	return 0;
}
