#include<stdio.h>

#define MAXSIZE 1000
#define OK 0
#define ERROR 1
//静态链表的第一个下标的数据为空，游标是第一个数据为空的下标，
//最后一个下标的游标是指向第一个存放数据的下标
//存数据的最后一个元素的下标应指向0
typedef int ElemType;
typedef int Status;

typedef struct {
	ElemType data;//数据
	int cur;//游标
} Compoent,StaticLinkList[MAXSIZE];

Status InitList(StaticLinkList space) {
	int i;
	for(i = 0; i<MAXSIZE-1; i++) {
		space[i].cur = i+1;
		space[MAXSIZE-i].cur = 0;

		return OK;
	}
}

//静态链表的插入操作
int Malloc_sll(StaticLinkList space) {
	int i = space[0].cur;//space[0]的游标是第一个数据为空的下标
	if(space[0].cur) {
		space[0].cur = space[i].cur;
		return i;//返回i就是要插入的下标
	}

}
Status InsertList(StaticLinkList L,int i,ElemType e) {
	int j,k,l;
	k = MAXSIZE - 1;
	if(i<1||i>ListLength(L)+1) {
		return ERROR;
	}
	j = Malloc_sll(L);
	if(j) {
		L[j].data = e;
		for(l=1;l<i-1;l++)
		{
			k = L[k].cur;
			L[k].cur = j;
		}
		return OK;
	}
	return ERROR;	
}
int main() {

	return 0;
}
